buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"

    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.moowork.node"


group = 'com.bass'
version = '1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
    implementation "org.springframework.ldap:spring-ldap-core"
    implementation 'org.springframework.security:spring-security-ldap'

    compileOnly 'org.projectlombok:lombok:1.18.4'
//    annotationProcessor 'org.projectlombok:lombok:1.18.4'

    runtime('mysql:mysql-connector-java')
    implementation group: 'org.apache.poi', name: 'poi', version: '4.0.1'


    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
    compile group: 'net.sf.jasperreports', name: 'jasperreports', version: '6.7.0'
    compile group: 'com.lowagie', name: 'itext', version: '2.1.7'
    compile group: 'net.sf.jasperreports', name: 'jasperreports-fonts', version: '6.0.0'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: '2.9.7'
    compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
    compile('org.springframework.boot:spring-boot-starter-actuator')


    runtime('org.springframework.boot:spring-boot-starter-tomcat')
}

//node {
////    version = '8.9.4'
////    download = false
//    nodeModulesDir = file("amdm-frontend")
//}
//
//task buildProd(type: NpmTask, dependsOn: 'npmInstall') {
//    group = 'build'
//    description = 'Compile client side folder for production'
//    args = ['run', 'build']
//
//}
//bootRun.dependsOn(npm_install)
//
//jar.dependsOn(buildProd)