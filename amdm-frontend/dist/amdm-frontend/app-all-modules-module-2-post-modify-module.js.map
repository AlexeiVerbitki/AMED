{"version":3,"sources":["webpack:///./src/app/all-modules/module-2/aprob-modify-post/aprob-modify-post.component.css","webpack:///./src/app/all-modules/module-2/aprob-modify-post/aprob-modify-post.component.html","webpack:///./src/app/all-modules/module-2/aprob-modify-post/aprob-modify-post.component.ts","webpack:///./src/app/all-modules/module-2/post-modify-routing.module.ts","webpack:///./src/app/all-modules/module-2/post-modify.module.ts","webpack:///./src/app/all-modules/module-2/reg-modify-cerere/reg-modify-cerere.component.css","webpack:///./src/app/all-modules/module-2/reg-modify-cerere/reg-modify-cerere.component.html","webpack:///./src/app/all-modules/module-2/reg-modify-cerere/reg-modify-cerere.component.ts"],"names":[],"mappings":"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","file":"app-all-modules-module-2-post-modify-module.js","sourcesContent":["module.exports = \"\\r\\n.md-form-modified {\\r\\n  position: relative;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 1.5rem;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid sky z-depth-2\\\">\\n  <h3 class=\\\"text-center my-3 font-weight-bold\\\">Aprobarea modificărilor postautorizare</h3>\\n  <hr>\\n  <h5 class=\\\"text-center font-weight-bold\\\">Ordin de întrerupere înregistrarii</h5>\\n  <hr>\\n  <form [formGroup]='dataForm'>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-5\\\">\\n              <div class=\\\"md-form\\\">\\n                  <input id=\\\"nrCererii\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\"\\n                         formControlName=\\\"nrCererii\\\" [attr.disabled]=\\\"true\\\">\\n                  <label for=\\\"nrCererii\\\">Nr. cererii</label>\\n              </div>\\n          </div>\\n\\n          <div class=\\\"col-lg-5\\\">\\n              <div class=\\\"md-form-modified\\\">\\n                  <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Data\\\" formControlName=\\\"data\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker touchUi #picker></mat-datepicker>\\n                  </mat-form-field>\\n              </div>\\n          </div>\\n          <div class=\\\"col-lg-2 position-button mt-3\\\">\\n              <label class=\\\"btn btn-indigo btn-sm\\\" for=\\\"incarcaraFisier\\\">\\n                  <input id=\\\"incarcaraFisier\\\" type=\\\"file\\\" style=\\\"display:none;\\\" (change)=\\\"onChange($event)\\\"\\n                         onclick=\\\"this.value=null;\\\"> Incarca Cerere\\n              </label>\\n          </div>\\n      </div>\\n  </form>\\n<hr>\\n  <table class=\\\"table table-widths-lg text-center\\\">\\n    <thead class=\\\"black white-text\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Denumire</th>\\n        <th>Format</th>\\n        <th>Data incarcarii</th>\\n        <th>Actiuni</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let a of aprob\\\">\\n        <th scope=\\\"row\\\">{{ a.denumire }}</th>\\n        <td>{{ a.format }}</td>\\n        <td>{{ a.dataIncarcarii }}</td>\\n        <td>\\n          <button class=\\\"btn btn-mdb-color btn-sm waves-light\\\" mdbWavesEffect>View</button>\\n          <button class=\\\"btn btn-dark-red-color waves-light btn-sm waves-light\\\" mdbWavesEffect>Delete</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <hr>\\n  <form [formGroup]='zForm'>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Compania-solicitant\\\">\\n              <mat-option *ngFor=\\\"let x of compSolicitant\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"nrRegMed\\\" class=\\\"form-control\\\">\\n          <label for=\\\"nrRegMed\\\">Nr. de înregistrare a medicamentului</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Tipul(rile) modificărilor postautorizare\\\">\\n              <mat-option *ngFor=\\\"let x of tipPost\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"nameComerc\\\" class=\\\"form-control\\\" disabled value=\\\"Valiexchimp\\\">\\n          <label for=\\\"nameComerc\\\">Denumirea comercială</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"nameIntern\\\" class=\\\"form-control\\\" disabled value=\\\"Valiexchimp 2\\\">\\n          <label for=\\\"nameIntern\\\">Denumirea comună internaționala</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"codATC\\\" class=\\\"form-control\\\" disabled value=\\\"CD12345\\\">\\n          <label for=\\\"codATC\\\">Codul ATC</label>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"md-form\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Forma farmaceutica\\\">\\n              <mat-option *ngFor=\\\"let x of forma\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <h5 class=\\\"text-center font-weight-bold\\\">Aprobarea a modificărilor postautorizare</h5>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"nrOrd1\\\" class=\\\"form-control\\\">\\n          <label for=\\\"nrOrd1\\\">Nr. ordinului</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Data\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n            <mat-datepicker touchUi #picker2></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <h5 class=\\\"text-center font-weight-bold\\\">Intreruperea a procedurii</h5>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"nrOrd2\\\" class=\\\"form-control\\\">\\n          <label for=\\\"nrOrd2\\\">Nr. ordinului</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Data\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n            <mat-datepicker touchUi #picker3></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"md-form\\\">\\n          <textarea type=\\\"text\\\" id=\\\"motivCancelProd\\\" class=\\\"md-textarea form-control\\\" mdbInputDirective></textarea>\\n          <label for=\\\"motivCancelProd\\\" for=\\\"form7\\\">Motivul întreruperii procedurii</label>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"nrScrisorii\\\" class=\\\"form-control\\\">\\n          <label for=\\\"nrScrisorii\\\">Nr. scrisorii</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <input matInput [matDatepicker]=\\\"picker4\\\" placeholder=\\\"Data scrisorii\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker4\\\"></mat-datepicker-toggle>\\n            <mat-datepicker touchUi #picker4></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"titlulScrisorii\\\" class=\\\"form-control\\\">\\n          <label for=\\\"titlulScrisorii\\\">Titlul scrisorii</label>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <h5 class=\\\"text-center font-weight-bold\\\">Deținătorului certificatului de înregistrare</h5>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\">\\n          <label for=\\\"name\\\">Denumirea</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Ţara\\\">\\n              <mat-option *ngFor=\\\"let x of tara\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"adressJur\\\" class=\\\"form-control\\\">\\n          <label for=\\\"adressJur\\\">Adresa juridică</label>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <h5 class=\\\"text-center font-weight-bold\\\">Producătorului substanţei active</h5>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"denuSubsActive\\\" class=\\\"form-control\\\">\\n          <label for=\\\"denuSubsActive\\\">Denumirea</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Ţara\\\">\\n              <mat-option *ngFor=\\\"let x of tara\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"adresJurSubsAct\\\" class=\\\"form-control\\\">\\n          <label for=\\\"adresJurSubsAct\\\">Adresa juridică</label>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <h5 class=\\\"text-center font-weight-bold\\\">Producătorului produsului finit</h5>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"denuProdFinish\\\" class=\\\"form-control\\\">\\n          <label for=\\\"denuProdFinish\\\">Denumirea</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Ţara\\\">\\n              <mat-option *ngFor=\\\"let x of tara\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input mdbInputDirective type=\\\"text\\\" id=\\\"adressJurProdFinish\\\" class=\\\"form-control\\\">\\n          <label for=\\\"adressJurProdFinish\\\">Adresa juridică</label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-dark-green-color waves-light btn-sm btn-sm-bl\\\" routerLink=\\\"/doc/analyze\\\" mdbWavesEffect>Macheta grafică</button>\\n      <button class=\\\"btn btn-dark-red-color waves-light btn-sm waves-light\\\" routerLink=\\\"/drugs/cancel\\\" mdbWavesEffect>Rezumatul caracteristicilor produsului</button>\\n      <button class=\\\"btn btn-mdb-color waves-light btn-sm waves-light\\\" routerLink=\\\"/drugs/cancel\\\" mdbWavesEffect>Prospectul pentru utilizator</button>\\n    </div>\\n  </form>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {Aprob} from '../../../models/aprob';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Select} from '../../../models/select';\nimport {DocumentDeIesire} from '../../../models/documentDeIesire';\n\n@Component({\n    selector: 'app-aprob-modify-post',\n    templateUrl: './aprob-modify-post.component.html',\n    styleUrls: ['./aprob-modify-post.component.css']\n})\n\nexport class AprobModifyPostComponent implements OnInit {\n    zForm: FormGroup;\n    dataForm: FormGroup;\n    aprob: Aprob[] = [\n        {denumire: 'Test', format: '*.pdf, *.doc, *.docx', dataIncarcarii: '07.05.2018'},\n        {denumire: 'Test', format: '*.pdf, *.doc, *.docx', dataIncarcarii: '07.05.2018'},\n        {denumire: 'Test', format: '*.pdf, *.doc, *.docx', dataIncarcarii: '07.05.2018'},\n        {denumire: 'Test', format: '*.pdf, *.doc, *.docx', dataIncarcarii: '07.05.2018'},\n    ];\n    compSolicitant: Select[] = [\n        {value: 'companie-1', viewValue: 'Companie Solicitanta 1'},\n        {value: 'companie-2', viewValue: 'Companie Solicitanta 2'},\n        {value: 'companie-3', viewValue: 'Companie Solicitanta 3'},\n        {value: 'companie-4', viewValue: 'Companie Solicitanta 4'},\n    ];\n    tipPost: Select[] = [\n        {value: 'tip-1', viewValue: 'Tipul 1'},\n        {value: 'tip-2', viewValue: 'Tipul 2'},\n        {value: 'tip-3', viewValue: 'Tipul 3'},\n        {value: 'tip-4', viewValue: 'Tipul 4'},\n        {value: 'tip-5', viewValue: 'Tipul 5'},\n        {value: 'tip-6', viewValue: 'Tipul 6'},\n    ];\n    forma: Select[] = [\n        {value: 'forma-1', viewValue: 'Forma 1'},\n        {value: 'forma-2', viewValue: 'Forma 2'},\n        {value: 'forma-3', viewValue: 'Forma 3'},\n        {value: 'forma-4', viewValue: 'Forma 4'},\n    ];\n    tara: Select[] = [\n        {value: 'tara-1', viewValue: 'Tara 1'},\n        {value: 'tara-2', viewValue: 'Tara 2'},\n        {value: 'tara-3', viewValue: 'Tara 3'},\n        {value: 'tara-4', viewValue: 'Tara 4'},\n    ];\n    document: DocumentDeIesire[] = [\n        {denumirea: 'Bonurile de plată', statut: 'Generat'},\n        {denumirea: 'Dispoziția de distribuire', statut: 'Generat'},\n        {denumirea: 'Scrisoare de solicitare a informației', statut: 'Generat'},\n        {denumirea: 'Ordinul de aprobare a modificărilor postautorizare', statut: 'Generat'},\n        {denumirea: 'Ordin de întrerupere a procedurii de aprobare a modificărilor postautorizare', statut: 'Generat'},\n        {denumirea: 'Modificarea la Certificatul de autorizare a medicamentului', statut: 'Generat'},\n        {denumirea: 'Raportul pentru Comisia Medicamentului', statut: 'Generat'},\n        {denumirea: 'Funcția de raportare flexibilă', statut: 'Generat'},\n    ];\n\n    constructor(private fb: FormBuilder) {\n        this.zForm = fb.group({\n            'dataReg': [null, Validators.required],\n            'numarCerere': [null, Validators.required],\n            'companiaSolicitant': [null, Validators.required],\n            'nrRegMed': [null, Validators.required],\n            'denumireComerciala': [null, Validators.required],\n            'denumireInternationala': [null, Validators.required],\n            'codulAtc': [null, Validators.required],\n            'formaFarmaceutica': [null, Validators.required],\n            'tipulModPost': [null, Validators.required],\n            'nrOrdAprob': [null, Validators.required],\n            'dataOrdAprob': [null, Validators.required],\n            'nrOrdIntrerupere': [null, Validators.required],\n            'dataOrdIntrerupere': [null, Validators.required],\n            'motivulIntrerupere': [null, Validators.required],\n            'denumireDetinCert': [null, Validators.required],\n            'taraDetinCert': [null, Validators.required],\n            'raionCert': [null, Validators.required],\n            'localitateCert': [null, Validators.required],\n            'stradaCert': [null, Validators.required],\n            'nrCert': [null, Validators.required],\n            'blocCert': [null, Validators.required],\n            'numarCert': [null, Validators.required],\n            'denumireProdSubsActiv': [null, Validators.required],\n            'taraProdSubsActiv': [null, Validators.required],\n            'raionProdSubsActiv': [null, Validators.required],\n            'localitateProdSubsActiv': [null, Validators.required],\n            'stradaProdSubsActiv': [null, Validators.required],\n            'nrProdSubsActiv': [null, Validators.required],\n            'blocProdSubsActiv': [null, Validators.required],\n            'numarProdSubsActiv': [null, Validators.required],\n            'denumireProdFinit': [null, Validators.required],\n            'taraProdFinit': [null, Validators.required],\n            'raionProdFinit': [null, Validators.required],\n            'localitateProdFinit': [null, Validators.required],\n            'stradaProdFinit': [null, Validators.required],\n            'nrProdFinit': [null, Validators.required],\n            'blocProdFinit': [null, Validators.required],\n            'numarProdFinit': [null, Validators.required],\n        });\n        this.dataForm = fb.group({\n            'data': {disabled: true, value: null},\n            'nrCererii': [null, Validators.required]\n          });\n    }\n\n    ngOnInit() {\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AprobModifyPostComponent} from \"./aprob-modify-post/aprob-modify-post.component\";\nimport {RegModifyCerereComponent} from \"./reg-modify-cerere/reg-modify-cerere.component\";\n\nconst routes: Routes = [\n    {path: 'register', component: RegModifyCerereComponent},\n    {path: 'modify', component: AprobModifyPostComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PostModifyRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {PostModifyRoutingModule} from './post-modify-routing.module';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MDBBootstrapModule} from \"angular-bootstrap-md\";\nimport {MaterialSharedModule} from \"../../material-shared.module\";\nimport {AprobModifyPostComponent} from \"./aprob-modify-post/aprob-modify-post.component\";\nimport { RegModifyCerereComponent } from './reg-modify-cerere/reg-modify-cerere.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PostModifyRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MDBBootstrapModule.forRoot(),\n        MaterialSharedModule.forRoot(),\n    ],\n    declarations: [AprobModifyPostComponent, RegModifyCerereComponent]\n})\nexport class PostModifyModule {\n}\n","module.exports = \".md-forms {\\r\\n    position: relative;\\r\\n    margin-top: 1.5rem;\\r\\n    margin-bottom: 1.5rem;\\r\\n}\\r\\n\\r\\nlabel.required:not(:empty):after,\\r\\n.field-header.required:after {\\r\\n    content: \\\" *\\\";\\r\\n    color: red;\\r\\n    position: absolute;\\r\\n    right: 0px;\\r\\n    top: -15px;\\r\\n}\\r\\n\\r\\n.mt-4s {\\r\\n    padding-top: 45px;\\r\\n}\\r\\n\\r\\n.md-form-modified {\\r\\n    position: relative;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 1.5rem;\\r\\n  }\"","module.exports = \"<div class=\\\"container-fluid sky z-depth-2\\\">\\n  <h3 class=\\\"text-center my-3 font-weight-bold\\\">Inregistrare cerere</h3>\\n  <hr>\\n    <form [formGroup]='dataForm'>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-5\\\">\\n          <div class=\\\"md-form\\\">\\n            <input id=\\\"nrCererii\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nrCererii\\\" [attr.disabled]=\\\"true\\\">\\n            <label for=\\\"nrCererii\\\">Nr. cererii</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-lg-5\\\">\\n          <div class=\\\"md-form-modified\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Data\\\" formControlName=\\\"data\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker touchUi #picker></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-2 position-button mt-3\\\">\\n          <label class=\\\"btn btn-indigo btn-sm\\\" for=\\\"incarcaraFisier\\\">\\n            <input id=\\\"incarcaraFisier\\\" type=\\\"file\\\" style=\\\"display:none;\\\" (change)=\\\"onChange($event)\\\" onclick=\\\"this.value=null;\\\"> Incarca Cerere\\n          </label>\\n        </div>\\n      </div>\\n    </form>\\n  <hr>\\n  <table class=\\\"table table-widths text-center\\\">\\n    <thead class=\\\"black white-text\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">Denumire</th>\\n      <th scope=\\\"col\\\">Format</th>\\n      <th scope=\\\"col\\\">Data incarcarii</th>\\n      <th scope=\\\"col\\\">Actiuni</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let x of cereri; let i = index\\\">\\n      <th scope=\\\"row\\\">{{ x.denumirea }}</th>\\n      <td>{{ x.format }}</td>\\n      <td>{{ x.dataIncarcarii }}</td>\\n      <td>\\n        <button class=\\\"btn btn-mdb-color btn-sm waves-light\\\" (click)=\\\"loadFile()\\\" mdbWavesEffect>Vizualizare</button>\\n        <button class=\\\"btn btn-dark-red-color waves-light btn-sm waves-light\\\" (click)=\\\"removeDocument(i)\\\" mdbWavesEffect>Stergere</button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n  <hr>\\n  <form [formGroup]='rForm'>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-label>Compania solicitant <span class=\\\"text-danger\\\">*</span></mat-label>\\n            <input type=\\\"text\\\" aria-label=\\\"Number\\\" [formControl]=\\\"rForm.controls['compGet']\\\"\\n                   matInput formControlName=\\\"compGet\\\" [matAutocomplete]=\\\"auto\\\" (ngModelChange)=\\\"checkCompanyValue()\\\">\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n              <mat-option *ngFor=\\\"let x of filteredOptions | async\\\" [value]=\\\"x\\\">\\n                {{x.name}}\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"med\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"med\\\">\\n          <label for=\\\"med\\\">Medicamentul\\n            <span class=\\\"text-danger\\\">*</span>\\n          </label>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"text-center w-100 mt-3\\\">\\n        <div class=\\\"alert alert-primary\\\">\\n          <span>Nr. de inregistrare a cererii: </span>\\n          <strong>{{generatedDocNrSeq}}</strong>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-dark-green-color waves-light btn-sm btn-sm-bl\\\" mdbWavesEffect (click)=\\\"nextStep()\\\">Urmatorul pas</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Cerere} from \"../../../models/cerere\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable, Subscription} from \"rxjs\";\nimport {MatDialog} from \"@angular/material\";\nimport {Router} from \"@angular/router\";\nimport {AdministrationService} from \"../../../shared/service/administration.service\";\nimport {map, startWith} from \"rxjs/operators\";\nimport {ConfirmationDialogComponent} from \"../../../confirmation-dialog/confirmation-dialog.component\";\nimport {saveAs} from 'file-saver';\n\n@Component({\n    selector: 'app-reg-modify-cerere',\n    templateUrl: './reg-modify-cerere.component.html',\n    styleUrls: ['./reg-modify-cerere.component.css']\n})\nexport class RegModifyCerereComponent implements OnInit {\n    cereri: Cerere [] = [];\n    companii: any[];\n    primRep: string;\n    rForm: FormGroup;\n    dataForm: FormGroup;\n    sysDate: string;\n    currentDate: Date;\n    file: any;\n    generatedDocNrSeq: number;\n    filteredOptions: Observable<any[]>;\n    formSubmitted: boolean;\n    isWrongValueCompany: boolean;\n    private subscriptions: Subscription[] = [];\n\n    constructor(private fb: FormBuilder, public dialog: MatDialog, private router: Router,\n                private administrationService: AdministrationService) {\n        this.rForm = fb.group({\n            'compGet': [null, Validators.required],\n            'med': [null, Validators.required],\n            'primRep': [null, Validators.required],\n        });\n        this.dataForm = fb.group({\n            'data': {disabled: true, value: null},\n            'nrCererii': [null, Validators.required]\n        });\n    }\n\n    ngOnInit() {\n        this.currentDate = new Date();\n\n        this.subscriptions.push(\n            this.administrationService.generateDocNr().subscribe(data => {\n                    this.generatedDocNrSeq = data;\n                    this.dataForm.get('nrCererii').setValue(this.generatedDocNrSeq);\n                },\n                error => console.log(error)\n            )\n        );\n\n        this.subscriptions.push(\n            this.administrationService.getAllCompanies().subscribe(data => {\n                    this.companii = data;\n                    this.filteredOptions = this.rForm.controls['compGet'].valueChanges\n                        .pipe(\n                            startWith<string | any>(''),\n                            // map(value => this._filter(value.viewValue))\n                            map(value => typeof value === 'string' ? value : value.name),\n                            map(name => this._filter(name))\n                        );\n                },\n                error => console.log(error)\n            )\n        );\n\n        this.dataForm.get('data').setValue(this.currentDate);\n    }\n\n    displayFn(user?: any): string | undefined {\n        return user ? user.name : undefined;\n    }\n\n    onChange(event) {\n        this.file = event.srcElement.files[0];\n        const fileName = this.file.name;\n        const lastIndex = fileName.lastIndexOf('.');\n        let fileFormat = '';\n        if (lastIndex !== -1) {\n            fileFormat = '*.' + fileName.substring(lastIndex + 1);\n        }\n        this.sysDate = `${this.currentDate.getDate()}.${this.currentDate.getMonth() + 1}.${this.currentDate.getFullYear()}`;\n        this.cereri.push({denumirea: fileName, format: fileFormat, dataIncarcarii: this.sysDate});\n    }\n\n    removeDocument(index) {\n        const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n            data: {message: 'Sunteti sigur ca doriti sa stergeti acest document?', confirm: false}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.cereri.splice(index, 1);\n            }\n        });\n    }\n\n    loadFile() {\n        saveAs(this.file, this.file.name);\n    }\n\n    chekCompanyValue() {\n        this.isWrongValueCompany = !this.companii.some(elem => {\n            return this.rForm.get('compGet').value == null ? true : elem.name === this.rForm.get('compGet').value.name;\n        });\n    }\n\n    nextStep() {\n        this.formSubmitted = true;\n\n        this.isWrongValueCompany = !this.companii.some(elem => {\n            return this.rForm.get('compGet').value == null ? true : elem.name === this.rForm.get('compGet').value.name;\n        });\n\n        if (!this.rForm.controls['compGet'].valid || !this.rForm.controls['primRep'].valid || !this.rForm.controls['med'].valid\n            || this.cereri.length === 0 || this.isWrongValueCompany) {\n            return;\n        }\n\n        this.formSubmitted = false;\n\n        // TODO save in DB values from form\n        // this.subscriptions.push(this.claimService.editClaim(this.model).subscribe(data => {\n        //     this.router.navigate(['/evaluate/initial']);\n        //   })\n        // );\n    }\n\n    private _filter(name: string): any[] {\n        const filterValue = name.toLowerCase();\n\n        return this.companii.filter(option => option.name.toLowerCase().includes(filterValue));\n    }\n\n    private saveToFileSystem(response: any, docName: string) {\n        const blob = new Blob([response]);\n        saveAs(blob, docName);\n    }\n}\n"],"sourceRoot":""}