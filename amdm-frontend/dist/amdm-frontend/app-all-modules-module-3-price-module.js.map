{"version":3,"sources":["webpack:///./src/app/all-modules/module-3/price-evaluate-med/price-evaluate-med.component.css","webpack:///./src/app/all-modules/module-3/price-evaluate-med/price-evaluate-med.component.html","webpack:///./src/app/all-modules/module-3/price-evaluate-med/price-evaluate-med.component.ts","webpack:///./src/app/all-modules/module-3/price-reg-med/price-reg-med.component.css","webpack:///./src/app/all-modules/module-3/price-reg-med/price-reg-med.component.html","webpack:///./src/app/all-modules/module-3/price-reg-med/price-reg-med.component.ts","webpack:///./src/app/all-modules/module-3/price-routing.module.ts","webpack:///./src/app/all-modules/module-3/price.module.ts","webpack:///./src/app/shared/service/company.service.ts","webpack:///./src/app/shared/service/document.service.ts","webpack:///./src/app/shared/service/medicament.service.ts","webpack:///./src/app/shared/service/reg-prices.service.ts"],"names":[],"mappings":"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","file":"app-all-modules-module-3-price-module.js","sourcesContent":["module.exports = \"\\r\\n.md-form-modified {\\r\\n  position: relative;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 1.5rem;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid sky z-depth-2\\\">\\n  <h3 class=\\\"text-center my-3 font-weight-bold\\\">Evaluarea cererii de inregistrare a pretului la medicamente</h3>\\n  <hr>\\n  <h5 class=\\\"text-center font-weight-bold\\\">Documente incarcate</h5>\\n  <hr>\\n  <table class=\\\"table table-widths-lg text-center\\\">\\n    <thead class=\\\"black white-text\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Denumire</th>\\n        <th>Format</th>\\n        <th>Data incarcarii</th>\\n        <th>Actiuni</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let a of aprob\\\">\\n        <th scope=\\\"row\\\">{{ a.denumire }}</th>\\n        <td>{{ a.format }}</td>\\n        <td>{{ a.dataIncarcarii }}</td>\\n        <td>\\n          <button class=\\\"btn btn-mdb-color btn-sm waves-light\\\" mdbWavesEffect>View</button>\\n          <button class=\\\"btn btn-dark-red-color waves-light btn-sm waves-light\\\" mdbWavesEffect>Delete</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <form [formGroup]='zForm'>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"03/03/2018\\\" [disabled]=\\\"true\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker touchUi #picker></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"nrCererii\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\" disabled>\\n          <label for=\\\"nrCererii\\\">Nr. de inregistrare a cererii\\n            <strong class=\\\"text-danger\\\">*</strong>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"compSolicitant\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\" [disabled]=\\\"true\\\">\\n          <label for=\\\"compSolicitant\\\">Compania-solicitant\\n            <strong class=\\\"text-danger\\\">*</strong>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"denumireaMed\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\" [disabled]=\\\"true\\\" placeholder=\\\"Aspirina (Acid acetilsalicilic)\\\">\\n          <label for=\\\"denumireaMed\\\">Denumirea medicamentului\\n            <strong class=\\\"text-danger\\\">*</strong>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"codMed\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\" [disabled]=\\\"true\\\" placeholder=\\\"ASPIRIN\\\">\\n          <label for=\\\"codMed\\\">Codul medicamentului\\n            <strong class=\\\"text-danger\\\">*</strong>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"doza\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"500.0\\\" [disabled]=\\\"true\\\">\\n          <label for=\\\"doza\\\">Doza\\n            <strong class=\\\"text-danger\\\">*</strong>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Unitate de masura\\\" [disabled]=\\\"true\\\">\\n              <mat-option *ngFor=\\\"let x of unitateDeMasura\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"prod\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\" [disabled]=\\\"true\\\" placeholder=\\\"Farmacia Familiei\\\">\\n          <label for=\\\"prod\\\">Producator\\n            <strong class=\\\"text-danger\\\">*</strong>\\n          </label>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <h5 class=\\\"text-center font-weight-bold\\\">Preturi propuse</h5>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"pret\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=\\\"true\\\" placeholder=\\\"2.00\\\">\\n          <label for=\\\"pret\\\">Pret\\n            <strong class=\\\"text-danger\\\">*</strong>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Valuta\\\" [disabled]=\\\"true\\\">\\n              <mat-option *ngFor=\\\"let x of valuta\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"pret2\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=\\\"true\\\" placeholder=\\\"0.1\\\">\\n          <label for=\\\"pret2\\\">Pret\\n            <strong class=\\\"text-danger\\\">*</strong>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Valuta\\\" [disabled]=\\\"true\\\">\\n              <mat-option *ngFor=\\\"let x of valuta\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <h5 class=\\\"text-center font-weight-bold\\\">\\n      Preturi in tari de referinta\\n    </h5>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Tara\\\" [disabled]=\\\"true\\\">\\n              <mat-option *ngFor=\\\"let x of country\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"pret3\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=\\\"true\\\" placeholder=\\\"1.90\\\">\\n          <label for=\\\"pret3\\\">Pret\\n            <strong class=\\\"text-danger\\\">*</strong>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Valuta\\\" [disabled]=\\\"true\\\">\\n              <mat-option *ngFor=\\\"let x of valuta\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"md-form-modified\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Data preluarii cursului valutar\\\" [disabled]=\\\"true\\\"\\n                  [formControl]=\\\"date\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                <mat-datepicker touchUi #picker1></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"position-button\\\">\\n          <div class=\\\"md-form pt-1\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-mdb-color waves-light btn-sm btn-sm-bl\\\" mdbWavesEffect>Extrage curs\\n              valutar</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <h5 class=\\\"text-center font-weight-bold\\\">Curs valutar</h5>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"eur\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\" value=\\\"19.57\\\" formControlName=\\\"eur\\\">\\n          <label for=\\\"eur\\\">Euro (EUR)</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"rur\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\" value=\\\"0.41\\\" formControlName=\\\"rur\\\">\\n          <label for=\\\"rur\\\">Rubla ruseasca (RUR)</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"usd\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\" value=\\\"16.61\\\" formControlName=\\\"usd\\\">\\n          <label for=\\\"usd\\\">Dolar american (USD)</label>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"pretAccept\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\" value=\\\"\\\" formControlName=\\\"pretAccept\\\">\\n          <label for=\\\"pretAccept\\\">Pret acceptat <strong class=\\\"text-danger\\\">*</strong></label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Valuta pretului acceptat \\\" formControlName=\\\"valutaFinishProp\\\">\\n              <mat-option *ngFor=\\\"let x of valutaAccept\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <h5 class=\\\"text-center font-weight-bold\\\">Documente de iesire</h5>\\n    <hr>\\n    <table class=\\\"table table-widths-lg text-center\\\">\\n      <thead class=\\\"black white-text\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Denumirea</th>\\n          <th>Statut</th>\\n          <th>Actiuni</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let a of docIesire\\\">\\n          <th scope=\\\"row\\\">{{ a.denumire }}</th>\\n          <td>{{ a.statut }}</td>\\n          <td>\\n            <button class=\\\"btn btn-default btn-sm waves-light\\\" mdbWavesEffect>Generare</button>\\n            <button [disabled]=a.status class=\\\"btn btn-mdb-color waves-light btn-sm waves-light\\\" mdbWavesEffect>Vizualizare</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form\\\">\\n          <input id=\\\"ordAprobPret\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"AB123\\\" formControlName=\\\"ordAprobPret\\\">\\n          <label for=\\\"ordAprobPret\\\">Ordin de aprobare a pretului</label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Data expirarii\\\" formControlName=\\\"dataExp\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n            <mat-datepicker touchUi #picker2></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"md-form-modified\\\">\\n          <mat-form-field class=\\\"w-100\\\">\\n            <mat-select placeholder=\\\"Motivul expirarii\\\" formControlName=\\\"motivulExp\\\">\\n              <mat-option *ngFor=\\\"let x of motivulExp\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"md-form\\\">\\n          <textarea id=\\\"note\\\" type=\\\"text\\\" class=\\\"md-textarea form-control\\\" mdbInputDirective formControlName=\\\"note\\\"></textarea>\\n          <label for=\\\"note\\\" for=\\\"form7\\\">Note</label>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-dark-red-color btn-sm waves-light\\\" mdbWavesEffect>Inapoi la pasul de inregistrare</button>\\n      <button class=\\\"btn btn-mdb-color waves-light btn-sm waves-light\\\" mdbWavesEffect>Urmatorul pas</button>\\n    </div>\\n  </form>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {Aprob} from '../../../models/aprob';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\nimport {DocIesire} from '../../../models/docIesire';\nimport {Select} from '../../../models/select';\n\n@Component({\n  selector: 'app-price-evaluate-med',\n  templateUrl: './price-evaluate-med.component.html',\n  styleUrls: ['./price-evaluate-med.component.css']\n})\nexport class PriceEvaluateMedComponent implements OnInit {\n\n\n  date = new FormControl({value: new Date(), disabled: true});\n  zForm: FormGroup;\n  aprob: Aprob[] = [\n    {denumire: 'Test', format: '*.pdf, *.doc, *.docx', dataIncarcarii: '07.05.2018'},\n    {denumire: 'Test', format: '*.pdf, *.doc, *.docx', dataIncarcarii: '07.05.2018'},\n    {denumire: 'Test', format: '*.pdf, *.doc, *.docx', dataIncarcarii: '07.05.2018'},\n    {denumire: 'Test', format: '*.pdf, *.doc, *.docx', dataIncarcarii: '07.05.2018'},\n  ];\n  valutaAccept: Select[] = [\n    {value: 'none', viewValue: '(None)'},\n    {value: 'MDL', viewValue: 'Lei MD'},\n    {value: 'RON', viewValue: 'Lei RO'},\n    {value: 'HRU', viewValue: 'Hrivne'},\n    {value: 'RUR', viewValue: 'Ruble rusesti'},\n    {value: 'EUR', viewValue: 'Euro'},\n    {value: 'USD', viewValue: 'Dolari americani'},\n  ];\n  docIesire: DocIesire[] = [\n    {denumire: 'Ordin de inregistrare a pretului', statut: 'Generat', status: true},\n    {denumire: 'Anexa 1', statut: 'Lipsa', status: false},\n    {denumire: 'Anexa 2', statut: 'Lipsa', status: false}\n  ];\n  motivulExp: Select[] = [\n    {value: 'none', viewValue: '(None)'},\n    {value: 'exp', viewValue: 'Expirarea contractului pe termen fix'},\n    {value: 'recalc', viewValue: 'Recalcularea preturilor'},\n  ];\n\n  constructor(private fb: FormBuilder) {\n    this.zForm = fb.group({\n      'priceRefProp': [null, Validators.required],\n      'valutaFinishProp': [null, Validators.required],\n      'eur': [null, Validators.required],\n      'rur': [null, Validators.required],\n      'usd': [null, Validators.required],\n      'pretAccept': [null, Validators.required],\n      'ordAprobPret': [null, Validators.required],\n      'dataExp': [null, Validators.required],\n      'motivulExp': [null, Validators.required],\n      'note': [null, Validators.required],\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n.md-form-modified {\\r\\n  position: relative;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 1.5rem;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid sky z-depth-2\\\">\\n    <h3 class=\\\"text-center my-3 font-weight-bold\\\">Înregistrarea prețului medicamentului</h3>\\n    <hr>\\n    <form [formGroup]='dataForm'>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-5\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"nrCererii\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\"\\n                           formControlName=\\\"nrCererii\\\" [attr.disabled]=\\\"true\\\">\\n                    <label for=\\\"nrCererii\\\">Nr. cererii</label>\\n                </div>\\n            </div>\\n  \\n            <div class=\\\"col-lg-5\\\">\\n                <div class=\\\"md-form-modified\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Data\\\" formControlName=\\\"data\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker touchUi #picker></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-2 position-button mt-3\\\">\\n                <label class=\\\"btn btn-indigo btn-sm\\\" for=\\\"incarcaraFisier\\\">\\n                    <input id=\\\"incarcaraFisier\\\" type=\\\"file\\\" style=\\\"display:none;\\\" (change)=\\\"onChange($event)\\\"\\n                           onclick=\\\"this.value=null;\\\"> Incarca Cerere\\n                </label>\\n            </div>\\n        </div>\\n    </form>\\n  <hr>\\n    <table class=\\\"table table-widths-lg text-center\\\">\\n        <thead class=\\\"black white-text\\\">\\n            <tr>\\n                <th scope=\\\"col\\\">Denumire</th>\\n                <th>Format</th>\\n                <th>Data incarcarii</th>\\n                <th>Actiuni</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let d of documents; let i = index\\\">\\n                <th scope=\\\"row\\\">{{ d.file.name }}</th>\\n                <td>{{ d.format }}</td>\\n                <td>{{ d.uploadDate }}</td>\\n                <td>\\n                    <button class=\\\"btn btn-mdb-color btn-sm waves-light\\\" mdbWavesEffect (click)=\\\"viewFile(i)\\\">View</button>\\n                    <button class=\\\"btn btn-dark-red-color waves-light btn-sm waves-light\\\" mdbWavesEffect (click)=\\\"removeDocument(i)\\\">Delete\\n                    </button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <hr>\\n    <form [formGroup]='PriceRegForm'>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"md-form-modified\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <mat-label>Compania solicitant <span class=\\\"text-danger\\\">*</span></mat-label>\\n                        <input type=\\\"text\\\" aria-label=\\\"Number\\\" [formControl]=\\\"PriceRegForm.controls['companiesDropDown']\\\"\\n                            matInput formControlName=\\\"companiesDropDown\\\" [matAutocomplete]=\\\"companyAuto\\\"\\n                            (ngModelChange)=\\\"chekCompanyValue()\\\">\\n                        <mat-autocomplete #companyAuto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n                            <mat-option *ngFor=\\\"let x of filteredOptions | async\\\" [value]=\\\"x\\\">\\n                                {{x.name}}\\n                            </mat-option>\\n                        </mat-autocomplete>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"md-form-modified\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <mat-label>Medicamentul<span class=\\\"text-danger\\\">*</span></mat-label>\\n                        <input type=\\\"text\\\" aria-label=\\\"Number\\\" [formControl]=\\\"PriceRegForm.controls['medDropDown']\\\"\\n                            matInput formControlName=\\\"medDropDown\\\" [matAutocomplete]=\\\"medAuto\\\" (ngModelChange)=\\\"chekMedValue()\\\">\\n                        <mat-autocomplete #medAuto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n                            <mat-option *ngFor=\\\"let m of companyMedicaments | async\\\" [value]=\\\"m\\\">\\n                                {{m.name}}\\n                            </mat-option>\\n                        </mat-autocomplete>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"md-form-modified\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <mat-select placeholder=\\\"Doza(e)\\\">\\n                            <mat-option *ngFor=\\\"let x of doza\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"quantity\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"quantity\\\">Cantitatea</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"codMed\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"codMed\\\">Codul(rile) medicamentului</label>\\n                </div>\\n            </div>\\n        </div>\\n        <hr>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"pretPropusSol\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"pretPropusSol\\\">Prețul(rile) propus(e) de solicitant</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form-modified\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <mat-select placeholder=\\\"Valuta prețului(rilor) propuse de solicitant\\\">\\n                            <mat-option *ngFor=\\\"let x of valuta\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </div>\\n        <hr>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"pretMed9Ref\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"pretMed9Ref\\\">Prețul(rile) medicamentului în 9 țari de referința</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form-modified\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <mat-select placeholder=\\\"Valuta ţărilor de referinţă\\\">\\n                            <mat-option *ngFor=\\\"let x of valuta\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </div>\\n        <hr>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"copiileCat\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"copiileCat\\\">Copiile cataloagelor</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"pretAccept\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"pretAccept\\\">Preţul acceptat</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"md-form-modified\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <mat-select placeholder=\\\"Valuta ţărilor de referinţă\\\">\\n                            <mat-option *ngFor=\\\"let x of valuta\\\" [value]=\\\"x.value\\\">{{ x.viewValue }}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form-modified\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Data de expirare\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker touchUi #picker2></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"motivulExp\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"motivulExp\\\">Motivul de expirare</label>\\n                </div>\\n            </div>\\n        </div>\\n        <hr>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"ord\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"ord\\\">Ordinul</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"anexa\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"anexa\\\">Anexa</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form-modified\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Data emiterii ordinului\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker touchUi #picker3></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"nrOrd\\\" mdbInputDirective type=\\\"text\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"nrOrd\\\">Nr. al ordinului</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"md-form\\\">\\n                    <textarea id=\\\"nota\\\" type=\\\"text\\\" class=\\\"md-textarea form-control\\\" mdbInputDirective></textarea>\\n                    <label for=\\\"nota\\\">Notă</label>\\n                </div>\\n            </div>\\n        </div>\\n        <hr>\\n        <h5 class=\\\"text-center font-weight-bold\\\">Cursul</h5>\\n        <hr>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"usd2\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"usd2\\\">USD</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"eu2\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"eu2\\\">EU</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"md-form\\\">\\n                    <input id=\\\"rur2\\\" mdbInputDirective type=\\\"number\\\" class=\\\"form-control\\\">\\n                    <label for=\\\"rur2\\\">RUR</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"position-button\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-mdb-color waves-light btn-sm btn-sm-bl\\\" mdbWavesEffect>Adauga unitate\\n                de masura\\n            </button>\\n        </div>\\n        <hr>\\n        <div class=\\\"text-center\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-dark-green-color waves-light btn-sm btn-sm-bl\\\" mdbWavesEffect>Urmatorul\\n                pas\\n            </button>\\n        </div>\\n    </form>\\n</div>\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Observable, Subscription} from 'rxjs';\nimport {Company} from '../../../models/company';\nimport {Medicament} from '../../../models/medicament';\nimport {Document} from '../../../models/document';\nimport {MatDialog} from '@angular/material';\nimport {PricesRegService} from '../../../shared/service/reg-prices.service';\nimport {map, startWith} from 'rxjs/operators';\nimport {DatePipe} from '@angular/common';\nimport {Select} from '../../../models/select';\nimport {saveAs} from 'file-saver';\nimport {ConfirmationDialogComponent} from \"../../../confirmation-dialog/confirmation-dialog.component\";\n\n\n@Component({\n  selector: 'app-price-reg-med',\n  templateUrl: './price-reg-med.component.html',\n  styleUrls: ['./price-reg-med.component.css']\n})\nexport class PriceRegMedComponent implements OnInit, OnDestroy {\n\n  PriceRegForm: FormGroup;\n  documents: Document[] = [];\n  private subscriptions: Subscription[] = [];\n  private generatedDocNrSeq: any;\n  companies: Company[] = [];\n  medicaments: Medicament[] = [];\n  currentFile: any;\n  filteredOptions: Observable<any[]>;\n  companyMedicaments: Observable<Medicament[]>;\n  uploadDate: Date;\n  lastCompanyId: number;\n  isWrongValueCompany: boolean;\n\n  constructor(private fb: FormBuilder, public dialog: MatDialog, private priceService: PricesRegService) {\n\n    this.PriceRegForm = fb.group({\n      'nrCerereInput': {disabled: true, value: null},\n      'dataReg': {disabled: true, value: null},\n      'companiesDropDown': [null, Validators.required],\n      'medDropDown': [null, Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.uploadDate = new Date();\n    this.PriceRegForm.get('dataReg').setValue(this.uploadDate);\n\n    this.subscriptions.push(\n      this.priceService.generateDocNumber().subscribe(generatedNumber => {\n          this.generatedDocNrSeq = generatedNumber;\n          this.PriceRegForm.get('nrCerereInput').setValue(this.generatedDocNrSeq);\n        },\n        error => console.log(error)\n      )\n    );\n\n    this.subscriptions.push(\n      this.priceService.getCompanies().subscribe(companiesData => {\n          this.companies = companiesData;\n          this.filteredOptions = this.PriceRegForm.controls['companiesDropDown'].valueChanges\n            .pipe(\n              startWith<string | any>(''),\n             // map( value => {this.getMedicaments(value.id); return value; }),\n              map(value => typeof value === 'string' ? value : value.name),\n              map(name => this._filter(name))\n            );\n        },\n        error => console.log(error)\n    ));\n\n    // this.PriceRegForm.controls['medDropDown'].valueChanges\n    //   .pipe(\n    //     startWith<string | any>(''),\n    //     map( value => {this.getMedicaments(value.id); return value; }),\n    //     map(value => typeof value === 'string' ? value : value.denumirea),\n    //     map(denumirea => this._filter(denumirea))\n    //   );\n  }\n\n  private getMedicaments(id) {\n    if (id === this.lastCompanyId) return;\n\n    this.lastCompanyId = id;\n    this.PriceRegForm.controls['medDropDown'].setValue('');\n    if (id !== undefined) {\n      this.companyMedicaments = this.priceService.getCompanyMedicaments(id); // .pipe(map(medicament => this.populateMedicamentFields(medicament as Medicament)));\n\n    }\n  }\n\n  populateMedicamentFields(medicament: Medicament) {\n    // this.PriceRegForm.controls['quantity'].setValue(medicament.quantity);\n  }\n\n  private _filter(name: string): any[] {\n    const filterValue = name.toLowerCase();\n    return this.companies.filter(option => option.name.toLowerCase().includes(filterValue) );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(value => value.unsubscribe());\n  }\n\n  chekCompanyValue()\n  {\n    this.isWrongValueCompany = !this.companies.some(elem => {\n      return this.PriceRegForm.get('companiesDropDown').value == null ? true : elem.name == this.PriceRegForm.get('companiesDropDown').value.name;\n    });\n  }\n\n  chekMedValue()\n  {}\n\n\n  displayFn(entity?: any): string | undefined {\n    return entity ? entity.name : undefined;\n  }\n\n  viewFile(index) {\n    this.currentFile = this.documents[index].name;\n    saveAs(this.currentFile, this.currentFile.name);\n  }\n\n  removeDocument(index) {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: {message: 'Sunteti sigur ca doriti sa stergeti acest document?', confirm: false}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.documents.splice(index, 1);\n      }\n    });\n  }\n\n  addDocument(event) {\n    this.currentFile = event.srcElement.files[0];\n    const fileName = this.currentFile.name;\n    const lastIndex = fileName.lastIndexOf( '.' );\n    let fileFormat = '';\n    if (lastIndex !== -1) {\n      fileFormat = '*.' + fileName.substring(lastIndex + 1);\n    }\n    // this.documents.push({ name: this.currentFile,\n    //   format: fileFormat,\n    //   uploadDate: new DatePipe('en-US').transform(this.uploadDate,  'dd.MM.yyyy') });\n  }\n\n  compSolicitant: Select[] = [\n    { value: 'comp-1', viewValue: 'Compania 1' },\n    { value: 'comp-2', viewValue: 'Compania 2' },\n    { value: 'comp-3', viewValue: 'Compania 3' },\n    { value: 'comp-4', viewValue: 'Compania 4' },\n    { value: 'comp-5', viewValue: 'Compania 5' }\n  ];\n  doza: Select[] = [\n    { value: 'micrograme', viewValue: 'micrograme' },\n    { value: 'mg', viewValue: 'mg' },\n    { value: 'g', viewValue: 'g' }\n  ];\n  valuta: Select[] = [\n    { value: 'MDL', viewValue: 'Lei MD' },\n    { value: 'RON', viewValue: 'Lei RO' },\n    { value: 'HRU', viewValue: 'Hrivne UKR' },\n    { value: 'RUR', viewValue: 'Ruble RU' },\n    { value: 'EUR', viewValue: 'Euro' },\n    { value: 'USD', viewValue: 'Dolari SUA' },\n  ];\n  country: Select[] = [\n    { value: 'ROM', viewValue: 'Romania' },\n    { value: 'UKR', viewValue: 'Ucraina' },\n    { value: 'RU', viewValue: 'Rusia' },\n    { value: 'FR', viewValue: 'Franta' },\n    { value: 'GER', viewValue: 'Germania' },\n  ];\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {PriceRegMedComponent} from './price-reg-med/price-reg-med.component';\nimport {PriceEvaluateMedComponent} from './price-evaluate-med/price-evaluate-med.component';\n\nconst routes: Routes = [\n    { path: 'register', component: PriceRegMedComponent},\n    { path: 'evaluate', component: PriceEvaluateMedComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PriceRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {PriceRoutingModule} from './price-routing.module';\nimport {PriceEvaluateMedComponent} from './price-evaluate-med/price-evaluate-med.component';\nimport {PriceRegMedComponent} from './price-reg-med/price-reg-med.component';\nimport {MDBBootstrapModule} from \"angular-bootstrap-md\";\nimport {MaterialSharedModule} from \"../../material-shared.module\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PriceRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MDBBootstrapModule.forRoot(),\n        MaterialSharedModule.forRoot(),\n    ],\n    schemas: [],\n    declarations: [PriceRegMedComponent, PriceEvaluateMedComponent]\n})\nexport class PriceModule {\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Company} from '../../models/company';\r\nimport {catchError, tap} from 'rxjs/operators';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class CompanyService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCompanies(): Observable<Company[]> {\r\n    return this.http.get<Company[]>('/api/all-companies');\r\n  }\r\n\r\n  addCompany() { }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DocumentService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  generateDocNr(): Observable<any> {\r\n    return this.http.get('/api/generate-doc-nr', {});\r\n  }\r\n  uploadDocument() { }\r\n  removeDocument() { }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Medicament} from '../../models/medicament';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class MedicamentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCompanyMedicaments(companyId): Observable<Medicament[]> {\r\n    let Params = new HttpParams();\r\n    Params = Params.set('companyId', companyId);\r\n\r\n    return this.http.get<Medicament[]>('/api/company-medicaments', { params: Params});\r\n  }\r\n\r\n  addMedicament() { }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {DocumentService} from './document.service';\r\nimport {CompanyService} from './company.service';\r\nimport {Observable} from 'rxjs';\r\nimport {Company} from '../../models/company';\r\nimport {MedicamentService} from './medicament.service';\r\nimport {Medicament} from '../../models/medicament';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class PricesRegService {\r\n\r\n  constructor(private docService: DocumentService,\r\n              private companyService: CompanyService,\r\n              private medicamentService: MedicamentService) {}\r\n\r\n   getCompanies(): Observable<Company[]> {\r\n      return this.companyService.getCompanies();\r\n   }\r\n\r\n   generateDocNumber(): Observable<any> {\r\n      return this.docService.generateDocNr();\r\n   }\r\n\r\n   getCompanyMedicaments(companyId): Observable<Medicament[]> {\r\n      return this.medicamentService.getCompanyMedicaments(companyId);\r\n   }\r\n}\r\n"],"sourceRoot":""}